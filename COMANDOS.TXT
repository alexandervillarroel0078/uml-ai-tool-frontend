BACKEND
cd backend
python -m venv .venv
.venv\Scripts\Activate.ps1
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

//para resetear la base de datos
1. mejor eliminar carpeta alembic 
2. crear:alembic init alembic
3. pedir codigo a chat gpt para env.py
4. configurar alembic.ini
[alembic]
script_location = alembic
Render:sqlalchemy.url = postgresql+psycopg2://uml_ai_tool_db_c6qy_user:f8uRMKeaKWldxtQygjnNiS5s6zK7NHKA@dpg-d3dac9i4d50c73d7lmt0-a.oregon-postgres.render.com:5432/uml_ai_tool_db_c6qy?sslmode=require
Local:sqlalchemy.url = postgresql+psycopg2://postgres:1234@localhost:5432/uml

//railway backend local
# .env.local
DB_URL=postgresql://postgres:OGfvdTJASYyhgrWXXwbmymTnIUupoebV@centerbeam.proxy.rlwy.net:38477/railway
//produccion 
DB_URL=postgresql://postgres:OGfvdTJASYyhgrWXXwbmymTnIUupoebV@postgres.railway.internal:5432/railway


5. DROP TABLE IF EXISTS alembic_version CASCADE;
6. alembic revision --autogenerate -m "init schema"
7. alembic upgrade head

//en powersehll para conectarse a la BD
psql -h dpg-d3dac9i4d50c73d7lmt0-a.oregon-postgres.render.com -U uml_ai_tool_db_c6qy_user -d uml_ai_tool_db_c6qy -p 5432 -W
contraseña:f8uRMKeaKWldxtQygjnNiS5s6zK7NHKA

python seeds/load_csv_sa.py







DELETE FROM alembic_version;
Remove-Item .\alembic\versions\* -Recurse -Force
alembic revision --autogenerate -m "init schema"
alembic upgrade head

uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

python .\seeds\load_csv_sa.py //para poblar la BD

http://127.0.0.1:8000/docs

//para crear requerieminetos
pip freeze > requirements.txt
//para instalar
pip install -r requirements.txt

cd C:\xampp\htdocs\uml-ai-tool\exporters\output\generated_project_test
mvn spring-boot:run
 


cd backend
.venv\Scripts\Activate.ps1
uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

cd frontend
npm run dev

cd exporters

POST http://localhost:8000/diagrams/367493a5-e490-4665-a73f-8626674b2ee2/export

# SELECT * FROM "user";
# SELECT * FROM diagram;
# SELECT * FROM clase;
# SELECT * FROM atributo;
# SELECT * FROM metodo;
# SELECT * FROM relacion;
# SELECT * FROM alembic_version;



DROP SCHEMA public CASCADE;

CREATE SCHEMA public;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO public;

DO $$ DECLARE
    r RECORD;
 BEGIN
     -- Desactivar temporalmente restricciones
     EXECUTE 'SET session_replication_role = replica';

     -- Eliminar todas las tablas del esquema público
     FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP
         EXECUTE 'DROP TABLE IF EXISTS public.' || quote_ident(r.tablename) || ' CASCADE';
     END LOOP;

     -- Restaurar las restricciones
     EXECUTE 'SET session_replication_role = origin';
 END $$;




